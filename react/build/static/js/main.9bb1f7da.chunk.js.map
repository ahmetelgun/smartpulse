{"version":3,"sources":["Globals/Animations.js","Globals/utils.js","Globals/Variables.js","Globals/Buttons.js","Pages/Signin/Signin.js","Pages/Signup/Signup.js","Globals/Header.js","Pages/Index/SideButton.js","Pages/Index/SideList.js","Pages/Index/Production.js","Pages/Index/OrganizationDetail.js","Pages/Index/Index.js","Pages/Logout/Logout.js","App.js","serviceWorker.js","index.js"],"names":["loadingKeyframe","keyframes","LoadingDiv","styled","span","Loading","setCookie","cname","cvalue","document","cookie","getCookie","name","ca","split","i","length","c","charAt","substring","indexOf","styles","AuthTextInputStyle","input","AuthTextInput","props","AuthSubmitStyle","AuthSubmit","Container","form","Signin","useState","email","setEmail","password","setPassword","loginError","setLoginError","useFetch","data","loading","error","callFetch","history","useHistory","isLogin","push","message","token","onSubmit","e","preventDefault","options","method","headers","body","JSON","stringify","type","placeholder","onChange","target","value","Signup","setName","surname","setSurname","passwordConfirm","setPasswordConfirm","passwordError","setPasswordError","required","Header","HeaderContainer","div","to","Button","SelectBox","button","SideButton","children","style","backgroundColor","selected","List","width","SearchInputContainer","SearchInput","SearchButton","SearchContainer","ResizableEdge","SideList","content","companyList","setCompanyList","searchInput","setSearchInput","setWidth","filter","toUpperCase","selecteds","notSelecteds","forEach","item","index","organizationName","includes","organizationETSOCode","key","onClick","setSelectedCompanies","onMouseDown","console","log","clientX","getElementsByTagName","userSelect","onmousemove","q","onMouseUp","hourlyList","getList","statistics","daily","element","x","tarih","y","toplamSum","sort","a","b","toplam","getUrgentList","list","temp","faultDetails","fault","faultIndex","faultCausedPowerLoss","caseStartDate","date","reason","Production","isGraphicShow","setIsGraphicShow","useEffect","stations","plotData","Object","keys","urgentMarketMessageList","mode","plot","layout","autosize","title","useResizeHandler","height","types","dppList","aicList","formatDate","d","hour","minute","sheetList","map","header","headerName","field","resizable","sortable","station","values","sheet","className","columnDefs","rowData","display","DateBox","Main","OrganizationDetail","selectedCompanies","selectedStations","setSelectedStations","startDate","setStartDate","endDate","setEndDate","selectedType","setSelectedType","join","then","main","organization","label","id","eic","etso","StationSelect","isMulti","TypeSelect","handleChange","checked","start","end","disabled","setStation","Side","RightPanel","Index","setStations","Logout","App","setIsLogin","useLocation","path","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9bb1f7da.chunk.js","sourcesContent":["import React from 'react';\nimport styled, { keyframes } from 'styled-components'\n\nconst loadingKeyframe = keyframes`\n  0% {\n    top: 36px;\n    left: 36px;\n    width: 0;\n    height: 0;\n    opacity: 1;\n  }\n  100% {\n    top: 0px;\n    left: 0px;\n    width: 72px;\n    height: 72px;\n    opacity: 0;\n  }`;\n\n\nconst LoadingDiv = styled.span`\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n  div {\n    position: absolute;\n    border: 4px solid rgba(0,170,0,.5);\n    opacity: 1;\n    border-radius: 50%;\n    animation: ${loadingKeyframe} 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;\n    div:nth-child(2) {\n    animation-delay: -0.5s;\n    }\n  } \n`;\n\nconst Loading = () => {\n  return <LoadingDiv><div></div><div></div></LoadingDiv>\n}\n\nexport { Loading };\n","import React from 'react';\n\nfunction setCookie(cname, cvalue) {\n    document.cookie = cname + \"=\" + cvalue;\n}\n\nfunction getCookie(cname) {\n    var name = cname + \"=\";\n    var ca = document.cookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n        var c = ca[i];\n        while (c.charAt(0) == ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) == 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return \"\";\n}\n\nexport { getCookie, setCookie };","const styles = {\n  header_height: \"40px\",\n  gray: \"rgb(230,230,230)\",\n  green: \"rgba(0,170,0,.6)\",\n  max_width: \"900px\",\n}\n\n\n\nexport { styles };","import React from 'react';\nimport { styles } from './Variables';\nimport styled from 'styled-components';\n\nconst AuthTextInputStyle = styled.input`\n        height: 40px;\n        padding: 10px;\n        text-align: center;\n        background-color: ${styles.green};\n        border-radius: 40px;\n    `;\nfunction AuthTextInput(props) {\n\n    return (\n        <AuthTextInputStyle {...props} />\n    )\n}\n\n\nconst AuthSubmitStyle = styled.input`\nheight: 40px;\n    padding: 10px;\n    text-align: center;\n    background-color: ${styles.green};\n    border-radius: 40px;\n    width: 100px;\n        :active{\n            background-color: blue;\n        }\n        :hover{\n            cursor: pointer;\n        }\n`;\nfunction AuthSubmit(props) {\n\n    return (\n        <AuthSubmitStyle {...props} />\n    )\n}\nexport { AuthTextInput, AuthSubmit }","import React, { useState } from 'react';\nimport useFetch from '@ahmetelgun/usefetch';\nimport styled from 'styled-components';\nimport { Loading } from '../../Globals/Animations'\nimport { useHistory } from \"react-router-dom\";\nimport { setCookie } from '../../Globals/utils';\nimport { AuthTextInput, AuthSubmit } from '../../Globals/Buttons.js'\nconst Container = styled.form`\n    display: flex;\n    margin-left: auto;\n    margin-right: auto;\n    flex-direction: column;\n    align-items: center;\n    width: 400px;\n    text-align:center;\n    margin-top: 10px;\n    input + input{\n        margin-top: 10px;\n    }\n    div{\n        margin-bottom: 10px;\n    }\n\n\n`;\n\nfunction Signin(props) {\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [loginError, setLoginError] = useState(null);\n    const [data, loading, error, callFetch] = useFetch();\n    let history = useHistory();\n    function handleSubmit(e) {\n        e.preventDefault()\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ email: email, password: password })\n        }\n        setLoginError(null);\n        callFetch(\"/api/signin\", options)\n    }\n    if (props.isLogin) {\n        history.push(\"/\");\n    }\n    if (loading) {\n        return <Loading />\n    }\n    if (error) {\n        return <div>error</div>\n    }\n    if (data) {\n        if (data.data.message === \"success\") {\n            setCookie(\"token\", data.data.token)\n            history.push(\"/\");\n        } else if (loginError == null) {\n            setLoginError(\"Email veya parola yanlis\")\n        }\n    }\n\n    return (\n        <Container onSubmit={handleSubmit}>\n            <div>{loginError}</div>\n            <AuthTextInput type=\"text\" placeholder=\"Email\" onChange={e => setEmail(e.target.value)} value={email} />\n            <AuthTextInput type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} value={password} />\n            <AuthSubmit type=\"submit\" value=\"Giris yap\" />\n        </Container>\n    )\n}\n\nexport default Signin;","import React, { useState } from 'react';\nimport useFetch from '@ahmetelgun/usefetch';\nimport styled from 'styled-components';\nimport { Loading } from '../../Globals/Animations'\nimport { useHistory } from \"react-router-dom\";\nimport { AuthTextInput, AuthSubmit } from '../../Globals/Buttons.js'\nconst Container = styled.form`\n    display: flex;\n    margin-left: auto;\n    margin-right: auto;\n    flex-direction: column;\n    align-items: center;\n    width: 400px;\n    text-align:center;\n    margin-top: 10px;\n    input + input{\n        margin-top: 10px;\n    }\n    div{\n        margin-bottom: 10px;\n    }\n`;\n\nfunction Signup() {\n    const [name, setName] = useState(\"\");\n    const [surname, setSurname] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n    const [data, loading, error, callFetch] = useFetch();\n    const [passwordError, setPasswordError] = useState(null);\n    const history = useHistory();\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (password !== passwordConfirm) {\n            setPasswordError(\"Parola eşleşmedi.\")\n            return\n        }\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ name: name, surname: surname, password: password, email: email })\n        }\n        setPasswordError(null)\n        callFetch(\"/api/signup\", options)\n\n    }\n    if (loading) {\n        return <Loading />\n    }\n    if (error) {\n        return <div>error</div>\n    }\n    if (data && passwordError === null) {\n        if (data.data.message === \"email is exist\") {\n            setPasswordError(\"Email adresi zaten kullanımda\");\n        }\n        else if (data.data.message === \"email is invalid\") {\n            setPasswordError(\"Geçersiz email\")\n        }\n        else if (data.data.message === \"name is invalid\") {\n            setPasswordError(\"İsim iki karakterden kısa olamaz\")\n        }\n        else if (data.data.message === \"surname is invalid\") {\n            setPasswordError(\"Soyisim iki karakterden kısa olamaz\")\n        }\n        else if (data.data.message === \"password is invalid\") {\n            setPasswordError(\"Parola 8 karakterden kısa olamaz\")\n        }\n        else if (data.data.message === \"success\") {\n            history.push(\"/\");\n        }\n    }\n    return (\n        <Container onSubmit={handleSubmit}>\n            <div>{passwordError}</div>\n            <AuthTextInput type=\"text\" placeholder=\"Name\" onChange={e => setName(e.target.value)} value={name} required />\n            <AuthTextInput type=\"text\" placeholder=\"Surname\" onChange={e => setSurname(e.target.value)} value={surname} required />\n            <AuthTextInput type=\"text\" placeholder=\"Email\" onChange={e => setEmail(e.target.value)} value={email} required />\n            <AuthTextInput type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} value={password} required />\n            <AuthTextInput type=\"password\" placeholder=\"Password Confirm\" onChange={e => setPasswordConfirm(e.target.value)} value={passwordConfirm} required />\n            <AuthSubmit type=\"submit\" value=\"Kayit ol\" />\n        </Container>\n    )\n}\n\n\n\nexport default Signup;","import React, { useEffect, useState } from 'react';\n\nimport styled from 'styled-components';\nimport { styles } from './Variables';\nimport { Link } from 'react-router-dom';\n\n\nconst Header = (props) => {\n  const HeaderContainer = styled.div`\n    height: ${styles.header_height};\n    background-color: gray;\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    box-sizing: border-box;\n    a{\n      padding: 10px;\n    }\n  `;\n  return (\n    <HeaderContainer>\n      <Link to=\"/\">Home</Link>\n      {props.isLogin ? <Link to=\"/logout\">Logout</Link> : <><Link to=\"/signin\">Signin</Link><Link to=\"/signup\">Signup</Link></>}\n\n\n    </HeaderContainer>\n  )\n}\n\n\n\n\nexport default Header;","import React from 'react'\nimport styled from 'styled-components';\nimport { styles } from '../../Globals/Variables'\n\nconst Button = styled.div`\n    color: ${styles.green};   \n    padding: 20px 15px;\n    transition: 170ms;    \n    display: flex;\n    width: 100%;\n    align-items: center;\n    :hover{\n      cursor: pointer;\n      background-color: rgb(200,200,200);\n    }\n    span{\n      color: white;\n      margin-right: 10px;\n      min-width: 35px;\n      height: 35px;\n      border-radius: 25px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      background-color: ${styles.green};\n    }\n    div{\n      min-height: 35px;\n      \n    }\n    button{\n      margin-left: auto;\n      \n    }\n  `;\n\nconst SelectBox = styled.button`\n  border: none;\n  border-radius: 25px;\n  min-width: 25px;\n  min-height: 25px;\n`;\n\nconst SideButton = ({ children, ...props }) => {\n  return (\n    <Button {...props}>\n      <span>{children.charAt(0)}</span>\n      <div>{children}</div>\n      <SelectBox style={{ backgroundColor: props.selected ? \"black\" : \"white\" }} />\n    </Button>\n  )\n}\n\nexport default SideButton;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { styles } from '../../Globals/Variables';\nimport { Loading } from \"../../Globals/Animations\";\nimport SideButton from './SideButton';\nimport useFetch from '@ahmetelgun/usefetch';\nconst Container = styled.div`\ndisplay: flex;\n`;\n\nconst List = styled.div`\n    max-height: calc(100vh - ${styles.header_height});\n    width: ${props => props.width}px;\n    box-sizing: border-box;\n    padding: 0px 10px 10px;\n    overflow-x: hidden;\n    overflow-y: scroll;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  `;\n\nconst SearchInputContainer = styled.div`\n  position: relative;\n\n  button{\n    position: absolute;\n    top: calc(50% - .5em);\n    right: .5em;\n  }\n\n\n`;\n\nconst SearchInput = styled.input`\n  height: 40px;\n  border: 1px solid black;\n  padding: 5px;\n  box-sizing: border-box;\n`;\n\nconst SearchButton = styled.button`\n  height: 40px;\n  margin-left: auto;\n  padding: 5px;\n  background-color: ${styles.green};\n`;\n\nconst SearchContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: space-between;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nconst ResizableEdge = styled.div`\n  height: 100%;\n  width: 10px;\n  background-color: black;\n`;\n\nconst SideList = (props) => {\n  const [data, loading, error] = useFetch(\"/api/main\");\n  const [companyList, setCompanyList] = useState([]);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [width, setWidth] = useState(500);\n  const [isShow, setIsShow] = useState(false);\n\n  let content;\n  if (loading) {\n    content = <Loading />\n  }\n  if (error) {\n    content = \"error\";\n  }\n  if (data) {\n    const filter = searchInput.toUpperCase();\n    let selecteds = []\n    let notSelecteds = []\n    data.data.forEach((item, index) => {\n      if (item.organizationName.toUpperCase().indexOf(filter) > -1) {\n        if (companyList.includes(item.organizationETSOCode)) {\n          selecteds.push(\n            <SideButton\n              setCompanyList={setCompanyList}\n              selected={true}\n              key={index}\n              onClick={\n                () => companyList.includes(item.organizationETSOCode) ? setCompanyList(companyList.filter(e => e !== item.organizationETSOCode)) : setCompanyList([...companyList, item.organizationETSOCode])}\n            >\n              {item.organizationName}\n            </SideButton>\n          );\n        } else {\n          notSelecteds.push(\n            <SideButton\n              setCompanyList={setCompanyList}\n              selected={false}\n              key={index}\n              onClick={\n                () => companyList.includes(item.organizationETSOCode) ? setCompanyList(companyList.filter(e => e !== item.organizationETSOCode)) : setCompanyList([...companyList, item.organizationETSOCode])}\n            >\n              {item.organizationName}\n            </SideButton>\n          );\n        }\n      }\n    })\n    content = [...selecteds, ...notSelecteds]\n  }\n\n  function startResize(e) {\n    console.log(e.clientX);\n    document.getElementsByTagName(\"body\")[0].style.userSelect = \"none\";\n    document.onmousemove = (q) => { setWidth(q.clientX) }\n\n  }\n\n  function stopResize(e) {\n    document.onmousemove = null;\n  }\n\n  return (\n    <Container>\n      <List width={width} >\n        <SearchContainer >\n          <SearchInputContainer>\n            <SearchInput type=\"text\" onChange={e => setSearchInput(e.target.value)} value={searchInput} placeholder=\"Ara\" />\n            <button onClick={() => setSearchInput(\"\")}>X</button>\n          </SearchInputContainer>\n          <SearchButton onClick={() => props.setSelectedCompanies(companyList)}>Karsilastir</SearchButton>\n        </SearchContainer>\n        {content}\n\n      </List>\n      <ResizableEdge onMouseDown={startResize} onMouseUp={stopResize} />\n    </Container>\n  );\n};\n\nexport default SideList;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { styles } from '../../Globals/Variables';\nimport Plot from 'react-plotly.js';\nimport useFetch from '@ahmetelgun/usefetch';\nimport { Loading } from '../../Globals/Animations';\nimport { AgGridReact } from 'ag-grid-react';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  width: 100%;\n  overflow-y: hidden;\n  flex-direction: column;\n\n  ::before{\n    content: \"\";\n    background-image: url(\"./statistics.png\");\n    display: block;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -1;\n    opacity: 0.3;\n    background-repeat: no-repeat;\n    background-position: 50% 50%;\n    background-size: 100px ;\n  }\n  `;\nconst TabButton = styled.button`\n  position: absolute;\n  right: 0;\n  top: 0;\n  z-index: 1;\n  height: 45px;\n  width: 65px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: green;\n`;\n\nlet hourlyList = {}\nconst getList = (statistics, daily = true, name = \"\") => {\n  if (daily) {\n    let data = []\n    statistics.forEach((element, index) => {\n      data.push({ x: element.tarih.split(\"T\")[0], y: element.toplamSum });\n    });\n    data.sort((a, b) => (a.x > b.x) ? 1 : -1)\n    let x = []\n    let y = []\n    data.forEach(item => {\n      x.push(item.x)\n      y.push(item.y)\n    })\n    return { x: x, y: y }\n  }\n  else {\n\n    statistics.forEach(element => {\n      if (hourlyList[element.tarih]) {\n        hourlyList[element.tarih][name] = element.toplam\n      } else {\n        hourlyList[element.tarih] = {}\n        hourlyList[element.tarih][name] = element.toplam\n      }\n    })\n  }\n}\nconst getUrgentList = (list, daily = true, name = \"\") => {\n  let data = []\n  if (daily) {\n    list.forEach((element, index) => {\n      let temp = 0\n      element.faultDetails.forEach((fault, faultIndex) => {\n        temp = temp + fault.faultCausedPowerLoss\n      })\n      data.push({ x: element.caseStartDate.split(\"T\")[0], y: temp })\n    })\n    data.sort((a, b) => (a.x > b.x) ? 1 : -1)\n    let x = []\n    let y = []\n    data.forEach(item => {\n      x.push(item.x)\n      y.push(item.y)\n    })\n    return { x: x, y: y }\n  } else {\n    list.forEach((element, index) => {\n      element.faultDetails.forEach((fault, faultIndex) => {\n        if (hourlyList[fault.date]) {\n          hourlyList[fault.date][name + \" \" + \"urgent\"] = fault.faultCausedPowerLoss\n          hourlyList[fault.date][name + \" \" + \"reason\"] = element.reason\n        } else {\n          hourlyList[fault.date] = {}\n          hourlyList[fault.date][name + \" \" + \"urgent\"] = fault.faultCausedPowerLoss\n          hourlyList[fault.date][name + \" \" + \"reason\"] = element.reason\n        }\n      })\n    })\n  }\n}\n\nconst Production = (props) => {\n  const [data, loading, error, callFetch] = useFetch();\n  const [isGraphicShow, setIsGraphicShow] = useState(false);\n  useEffect(() => {\n    if (props.stations.length > 0) {\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(props.stations),\n      }\n      callFetch(\"/api/post\", options)\n    }\n  }, [props.stations])\n  let content;\n  if (loading) {\n    content = <Loading />\n  }\n  if (error) {\n    content = \"error\";\n  }\n  if (data) {\n\n    //////////  PLOT  //////////\n    let plotData = [];\n    data.data.forEach(item => {\n      Object.keys(item).forEach(type => {\n        if (type === \"urgent\") {\n          var temp = getUrgentList(item[type].urgentMarketMessageList, true)\n          temp = {\n            ...temp,\n            type: 'scatter',\n            mode: 'markers',\n            name: item.name + \" \" + type\n          }\n          plotData.push(temp);\n        }\n        else if (type === \"eak\" || type === \"kgup\") {\n          var temp = getList(item[type].statistics, true, type)\n          temp = {\n            ...temp,\n            type: 'scatter',\n            mode: 'lines+markers',\n            name: item.name + \" \" + type\n          }\n          plotData.push(temp);\n        }\n      })\n    })\n\n    const plot = <Plot\n      data={plotData}\n      layout={{\n        autosize: true,\n        title: false\n      }}\n      useResizeHandler={true}\n      style={{ width: \"100%\", height: \"100%\" }}\n    />\n    //////////  END PLOT  //////////\n\n    //////////  SHEET  //////////\n    const types = [\n      { \"kgup\": \"KGUP\" },\n      { \"eak\": \"EAK\" },\n      { \"urgent\": \"Arıza\", \"reason\": \"Ariza Nedeni\" }\n    ]\n    data.data.forEach((item, index) => {\n      Object.keys(item).forEach(type => {\n        if (type === \"urgent\") {\n          getUrgentList(item[type].urgentMarketMessageList, false, index);\n        } else if (type === \"kgup\") {\n          getList(item[type].dppList, false, index + \" \" + type);\n        } else if (type === \"eak\") {\n          getList(item[type].aicList, false, index + \" \" + type);\n        }\n      })\n    })\n\n    const formatDate = (date) => {\n      const d = date.split(\"T\")\n      const hour = d[1].split(\":\")[0]\n      const minute = d[1].split(\":\")[1]\n      return d[0] + \" \" + hour + \":\" + minute\n    }\n\n    let sheetList = Object.keys(hourlyList).map(item => {\n      return { ...hourlyList[item], date: formatDate(item) }\n    })\n    sheetList.sort((a, b) => (a.date > b.date) ? 1 : -1)\n\n    console.log(sheetList);\n    let header = [{ headerName: \"Tarih\", field: \"date\", resizable: true, sortable: true }]\n    props.stations.forEach((station, index) => {\n      let temp = { headerName: station.name, children: [] }\n      station.types.forEach(item => {\n        if (item == 2) {\n          temp.children.push({ headerName: Object.values(types[item])[0], field: index + \" \" + Object.keys(types[item])[0], resizable: true, sortable: true })\n          temp.children.push({ headerName: Object.values(types[item])[1], field: index + \" \" + Object.keys(types[item])[1], resizable: true, sortable: true })\n        } else {\n          temp.children.push({ headerName: Object.values(types[item])[0], field: index + \" \" + Object.keys(types[item])[0], resizable: true, sortable: true })\n        }\n\n      })\n      header.push(temp);\n    })\n\n\n    const sheet = <div className=\"ag-theme-alpine\" style={{ height: '100%', width: '100%' }}>\n      <AgGridReact\n        columnDefs={header}\n        rowData={sheetList}\n      ></AgGridReact></div>\n\n\n    //////////  END SHEET  //////////\n\n    content = (\n      <>\n        <div style={{ display: \"flex\" }}>\n          <button onClick={() => setIsGraphicShow(false)}>Liste</button>\n          <button onClick={() => setIsGraphicShow(true)}>Grafik</button>\n        </div>\n        {isGraphicShow ? plot : sheet}\n      </>\n    )\n\n  }\n  return (\n    <Container>\n      {content}\n    </Container>\n  )\n\n}\n\nexport default Production;","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { styles } from '../../Globals/Variables';\nimport useFetch from '@ahmetelgun/usefetch'\nimport { Loading } from '../../Globals/Animations';\nimport Select from 'react-select'\nconst Container = styled.div`\n  height: 300px;\n  padding: 15px;\n  position: relative;\n  /* display: flex; */\n  flex-direction: column;\n  background-color: rgba(240,240,240, .6);\n  align-items: center;\n  justify-content: center;\n\n  ::before{\n    content: \"\";\n    background-image: url(\"./wind.png\");\n    display: block;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -1;\n    opacity: 0.3;\n    background-repeat: no-repeat;\n    background-position: 50% 50%;\n    background-size: 100px ;\n  }\n`;\n\nconst Button = styled.button`\n  padding: 5px 10px;\n  background-color: ${styles.green};\n  width: 125px;\n  border-radius: 3px;\n  transition: .4s;\n  :disabled{\n    background-color: #ccc;\n  }\n`;\n\n\nconst DateBox = styled.div`\n  margin-top: 20px;\n  display: flex;\n  align-items: center;\n  input{\n    background-color: transparent;\n  }\n  label{\n    display: block;\n  }\n  label+label{\n    margin-top: 10px;\n  }\n  div{\n    display: flex;\n    flex-direction: column;\n  }\n  div + div{\n    margin-left: 10px;\n    margin-top: 0;\n  }\n  & ${Button}{\n    margin-left: 10px;\n  }\n\n`;\n\nconst Main = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  \n\n`\n\nconst OrganizationDetail = (props) => {\n  const [data, loading, error, callFetch] = useFetch();\n  const [selectedCompanies, setSelectedCompanies] = useState();\n  const [selectedStations, setSelectedStations] = useState([]);\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [selectedType, setSelectedType] = useState([]);\n  useEffect(() => {\n\n    if (props.selectedCompanies.length > 0) {\n      setSelectedStations([])\n      callFetch(`/api/organization?etso=${props.selectedCompanies.join()}`)\n        .then(() => {\n          setSelectedCompanies(props.selectedCompanies);\n        })\n    }\n  }, [props.selectedCompanies])\n\n  let content;\n\n  if (loading) {\n    content = <Loading />\n  }\n  else if (error) {\n    content = \"error\"\n  }\n\n  else if (data && selectedCompanies === props.selectedCompanies) {\n    let main;\n    if (data.data.length > 0) {\n      const types = [\n        { name: 'KGUP', value: 'kgup' },\n        { name: 'EAK', value: 'eak' },\n        { name: 'Arıza ve Bakım Bilgisi', value: 'urgent' }\n      ]\n\n      const handleChange = (index) => {\n        if (selectedType.includes(index)) {\n          setSelectedType(selectedType.filter(i => i !== index));\n        } else {\n          setSelectedType([...selectedType, index].sort());\n        }\n      }\n      let options = data.data.map(organization => {\n        return {\n          label: organization.name,\n          options: organization.stations.map(station => (\n            { value: station.id, label: station.name, eic: station.eic, etso: organization.etso }\n          ))\n        }\n      });\n      const StationSelect = <Select isMulti options={options} onChange={e => setSelectedStations(e)} />\n\n      const TypeSelect = types.map((item, index) => <label key={index}>{item.name}: <input type=\"checkbox\" value={item.value} onChange={() => handleChange(index)} checked={selectedType.includes(index)} /> </label>)\n      let stations;\n      if (selectedStations) {\n        stations = selectedStations.map(station => {\n          return {\n            name: station.label,\n            id: station.value,\n            eic: station.eic,\n            etso: station.etso,\n            start: startDate,\n            end: endDate,\n            types: selectedType\n          }\n        })\n\n      }\n      main = (\n        <Main>\n          {StationSelect}\n          {TypeSelect}\n          <DateBox>\n            <div>\n              <span>Başlangıç tarihi</span>\n              <span>Bitiş tarihi</span>\n            </div>\n            <div>\n              <input type=\"date\" onChange={e => setStartDate(e.target.value)} />\n              <input type=\"date\" onChange={e => setEndDate(e.target.value)} />\n            </div>\n            <Button\n              disabled={!(startDate && endDate && selectedStations != null && selectedType.length > 0)}\n              onClick={() => props.setStation(stations)}>\n              Ara\n            </Button>\n          </DateBox>\n        </Main>\n      )\n    }\n    else {\n      main = <div>yok</div>\n    }\n    content = (\n      <div style={{ width: \"100%\" }}>\n        {main}\n      </div>\n    )\n\n  }\n\n\n  return (\n    <Container>\n      {content}\n    </Container>\n\n  )\n};\n\nexport default OrganizationDetail;\n","import React from \"react\";\nimport SideList from './SideList';\nimport Production from './Production';\nimport OrganizationDetail from './OrganizationDetail';\nimport styled from 'styled-components';\nimport { styles } from '../../Globals/Variables';\n\nconst Side = styled(SideList)`\n\n`;\n\nconst Container = styled.div`\n  display: flex;\n  ${Side}{\n    @media(max-width: ${styles.max_width}){\n      display: none;\n    }\n  }\n`;\n\nconst RightPanel = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height:  calc(100vh - ${styles.header_height});\n`;\n\n\n\n\n\n\nfunction Index(props) {\n  return (\n    <Container>\n      <Side setSelectedCompanies={props.setSelectedCompanies} />\n\n      <RightPanel>\n        <OrganizationDetail selectedCompanies={props.selectedCompanies} setStation={props.setStations} />\n        <Production stations={props.stations} />\n      </RightPanel>\n    </Container>\n  )\n}\n\nexport default Index;","import React, { useState } from 'react';\nimport useFetch from '@ahmetelgun/usefetch';\nimport { Loading } from '../../Globals/Animations'\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport { setCookie, getCookie } from '../../Globals/utils';\n\nfunction Logout(props) {\n    const token = getCookie(\"token\");\n    const history = useHistory();\n    const options = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ token: token })\n    }\n    const [data, loading, error] = useFetch(\"/api/logout\", options);\n    setCookie(\"token\", \"\");\n\n    if (data) {\n        console.log(\"sdfsad\");\n        history.push(\"/\");\n    }\n    return <Loading />\n}\n\n\nexport default Logout;","import React, { useState, useEffect } from \"react\";\nimport Signin from './Pages/Signin/Signin';\nimport Signup from './Pages/Signup/Signup';\nimport {\n  Switch,\n  Route,\n  useLocation,\n} from \"react-router-dom\";\nimport useFetch from \"@ahmetelgun/usefetch\";\nimport Header from './Globals/Header';\nimport Index from './Pages/Index/Index';\nimport { getCookie, setCookie } from \"./Globals/utils\";\nimport Logout from './Pages/Logout/Logout';\n\nconst App = () => {\n  const [selectedCompanies, setSelectedCompanies] = useState([]);\n  const [stations, setStations] = useState([]);\n  const [data, loading, error, callFetch] = useFetch();\n  const [isLogin, setIsLogin] = useState(false);\n  let history = useLocation();\n  let token = getCookie(\"token\")\n  useEffect(() => {\n    token = getCookie(\"token\")\n    if (token) {\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ token: token })\n      }\n      callFetch(\"/api/signin\", options);\n    }\n  }, [history])\n  if (token && data && data.data.message === \"success\" && isLogin === false) {\n    setIsLogin(true);\n  }\n  else if (token && data && data.data.message !== \"success\") {\n    setCookie(token, \"\");\n    if (isLogin) {\n      setIsLogin(false);\n    }\n  } else if (!token && isLogin) {\n    setIsLogin(false);\n  }\n  return (\n    <>\n      <Header isLogin={isLogin} />\n      <Switch>\n        <Route path=\"/signup\">\n          <Signup />\n        </Route>\n        <Route path=\"/signin\">\n          <Signin isLogin={isLogin} />\n        </Route>\n        <Route path=\"/logout\">\n          <Logout setIsLogin={setIsLogin} />\n        </Route>\n        <Route path=\"/\">\n          <Index setSelectedCompanies={setSelectedCompanies} selectedCompanies={selectedCompanies} setStations={setStations} stations={stations} />\n        </Route>\n      </Switch>\n    </>\n  )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nReactDOM.render(\n  //<React.StrictMode>\n  <Router>\n    <App />\n  </Router>\n  //</React.StrictMode>,\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}